1.<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Color Change</title>
    <style>
        table,tr,td{
            border: 1px solid red;
            border-style: dotted;
        }
    </style>
</head>
<body>
    <div>
        <table align="center">
            <tr>
            <td onmouseover="changeColor(this,'#00008b')" onmouseout="changeColorBack(this)">#00008b</td>
            <td onmouseover="changeColor(this,'	#006400	')" onmouseout="changeColorBack(this)">#006400</td>
            <td onmouseover="changeColor(this,'	#8b008b')" onmouseout="changeColorBack(this)">#8b008b</td>
            </tr>
            <tr>
                <td onmouseover="changeColor(this,'	#ffd700')" onmouseout="changeColorBack(this)">#ffd700</td>
                <td onmouseover="changeColor(this,'	#87cefa')" onmouseout="changeColorBack(this)">#87cefa</td>
                <td onmouseover="changeColor(this,'	#00ff00')" onmouseout="changeColorBack(this)">#00ff00</td>
            </tr>
            <tr>
                <td onmouseover="changeColor(this,'#B22222')" onmouseout="changeColorBack(this)">#B22222</td>
                <td onmouseover="changeColor(this,'#FF69B4')" onmouseout="changeColorBack(this)">#FF69B4</td>
                <td onmouseover="changeColor(this,'#FFFACD')" onmouseout="changeColorBack(this)">#FFFACD</td>
            </tr>
        </table>
    </div>
    <script src="index.js"></script>
</body>
</html>

2.<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .nav-bar{
            display: flex; gap: 20px; justify-content: center;
        }
        .nav-links{
            text-decoration:none;
            color:black;
        }
        .project-links{
            text-decoration: underline;
            color:white;
        }
        .nav-elements{
            padding: 20px 30px;
            background-color:khaki;
            border-radius: 10%;
        }
        .drop-down-div1{
            display: none;
            max-width: 50px;
            z-index: 1;
        }
        .drop-down-div1 a{
            text-decoration: none;
            display: block;
            padding: 10px 0px;
            text-align: left;   
        }
        #department:hover .drop-down-div1{
            display: block;
        }
    </style>
</head>
<body>
    <div>
        <nav class="nav-bar">
          <a class="nav-links" href="#Home-div"><div class="nav-elements">Home</div></a>
          <a class="nav-links" href="#About-Us-div"><div class="nav-elements">About Us</div></a>
          <a class="nav-links" href="#Awards-div"><div class="nav-elements">Awards</div></a>
          <a class="nav-links" href="#Academics-div"><div class="nav-elements">Academics</div></a>
          <a class="nav-links" href="">
            <div class="nav-elements" id="department">
                Department
                <div class="drop-down-div1">
                   <a href="">AI&DS</a>
                   <a href="">CSE</a>
                   <a href="">MECH</a>
                   <a href="">IT</a>
                   <a href="">EEE</a>
                </div>
            </div>
            </div>
          </a>
        </nav>
    </div>
</body>
</html>
3.<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pop-up Blocker</title>
</head>
<body>
    <script>
        const popUp = () =>{
            let popup = window.open(null,'','width=100px','height=100px')
            try {
                popup.close()
                return false;
            } catch (error) {
                return true
            }
        }
        if (popUp()) {
            document.writeln("<h1>Popup is Blocked</h1>")
        } else {
            document.writeln("<h1>Popup is not Blocked</h1>")
        }
    </script>
</body>
</html>


4.HTML

<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="utf-8">

	<title>15Tiles</title>
	<link rel="stylesheet" href="./website.css">
	<script type="text/javascript" src="fifteenPuzzle.js"></script>
</head>

<body>
	<div id="wrapper">
		

		<div id="content">
			<table id="table">
			</table>
			<br>
			<br>
			<input type="button" id="newGame" value="Start New Game">
			<br>
			<br>
			Number Of Moves: <div id="moves">0</div>
		</div>
		</div>

</body>
</html>

SCRIPT
var moves = 0;
var table;
var rows;
var columns;
var textMoves;
var arrayForBoard;

function start() {
  var button = document.getElementById("newGame");
  button.addEventListener("click", startNewGame, false);
  textMoves = document.getElementById("moves");
  table = document.getElementById("table");
  rows = 4;
  columns = 4;
  startNewGame();
}

function startNewGame() {
  var arrayOfNumbers = new Array();
  var arrayHasNumberBeenUsed;
  var randomNumber = 0;
  var count = 0;
  moves = 0;
  rows = 4;
  columns = 4;
  textMoves.innerHTML = moves;
  arrayForBoard = new Array(rows);
  for (var i = 0; i < rows; i++) {
    arrayForBoard[i] = new Array(columns);
  }
  arrayHasNumberBeenUsed = new Array(rows * columns);
  for (var i = 0; i < rows * columns; i++) {
    arrayHasNumberBeenUsed[i] = 0;
  }
  for (var i = 0; i < rows * columns; i++) {
    randomNumber = Math.floor(Math.random() * rows * columns);
    // If our random numer is unique, add it to the board.
    if (arrayHasNumberBeenUsed[randomNumber] == 0) {
      arrayHasNumberBeenUsed[randomNumber] = 1;
      arrayOfNumbers.push(randomNumber);
    }
    else
    {
      i--;
    }
  }
  count = 0;
  for (var i = 0; i < rows; i++) {
    for (var j = 0; j < columns; j++) {
      arrayForBoard[i][j] = arrayOfNumbers[count];

      count++;
    }
  }
  showTable();
}

function showTable() {
  var outputString = "";
  for (var i = 0; i < rows; i++) {
    outputString += "<tr>";
    for (var j = 0; j < columns; j++) {
      if (arrayForBoard[i][j] == 0) {
        outputString += "<td class=\"blank\"> </td>";
      }
      else {
        outputString += "<td class=\"tile\" onclick=\"moveThisTile(" + i + ", " + j + ")\">" + arrayForBoard[i][j] + "</td>";
      }
    }
    outputString += "</tr>";
  }

  table.innerHTML = outputString;
}

function moveThisTile(tableRow, tableColumn) {
  if (checkIfMoveable(tableRow, tableColumn, "up") ||
    checkIfMoveable(tableRow, tableColumn, "down") ||
    checkIfMoveable(tableRow, tableColumn, "left") ||
    checkIfMoveable(tableRow, tableColumn, "right")) {
    incrementMoves();
  }
  else {
    alert("ERROR: Cannot move tile!\nTile must be next to a blank space.");
  }

  if (checkIfWinner()) {
    alert("Congratulations! You solved the puzzle in " + moves + " moves.");
    startNewGame();
  }
}

function checkIfMoveable(rowCoordinate, columnCoordinate, direction) {
  rowOffset = 0;
  columnOffset = 0;
  if (direction == "up") {
    rowOffset = -1;
  }
  else if (direction == "down") {
    rowOffset = 1;
  }
  else if (direction == "left") {
    columnOffset = -1;
  }
  else if (direction == "right") {
    columnOffset = 1;
  }
  if (rowCoordinate + rowOffset >= 0 && columnCoordinate + columnOffset >= 0 &&
    rowCoordinate + rowOffset < rows && columnCoordinate + columnOffset < columns
  ) {
    if (arrayForBoard[rowCoordinate + rowOffset][columnCoordinate + columnOffset] == 0) {
      arrayForBoard[rowCoordinate + rowOffset][columnCoordinate + columnOffset] = arrayForBoard[rowCoordinate][columnCoordinate];
      arrayForBoard[rowCoordinate][columnCoordinate] = 0;
      showTable();
      return true;
    }
  }
  return false;
}

function checkIfWinner() {
  var count = 1;
  for (var i = 0; i < rows; i++) {
    for (var j = 0; j < columns; j++) {
      if (arrayForBoard[i][j] != count) {
        if (!(count === rows * columns && arrayForBoard[i][j] === 0)) {
          return false;
        }
      }
      count++;
    }
  }

  return true;
}

function incrementMoves() {
  moves++;
  if (textMoves)
  {
    textMoves.innerHTML = moves;
  }
}

window.addEventListener("load", start, false);


